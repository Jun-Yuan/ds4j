{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Data Structures in Java for Smith College (Videos) Lists: Linked & Array Singly Linked-Lists Doubly Linked-Lists Chunky ArrayLists Lists Conclusions Sorting Sorting (Part 1): Binary Search, IsSorted, BubbleSort Sorting (Part 2): Insertion, Selection and Merge Sort QuickSort Trees Intro to Trees Heaps & HeapSort HashTables Hashing, HashTables, HashSets, and HashMaps Algorithms Preview Balancing Tree Algorithms Intro to Graphs & Graph Algorithms","title":"About"},{"location":"index.html#data-structures-in-java-for-smith-college-videos","text":"","title":"Data Structures in Java for Smith College (Videos)"},{"location":"index.html#lists-linked-array","text":"Singly Linked-Lists Doubly Linked-Lists Chunky ArrayLists Lists Conclusions","title":"Lists: Linked &amp; Array"},{"location":"index.html#sorting","text":"Sorting (Part 1): Binary Search, IsSorted, BubbleSort Sorting (Part 2): Insertion, Selection and Merge Sort QuickSort","title":"Sorting"},{"location":"index.html#trees","text":"Intro to Trees Heaps & HeapSort","title":"Trees"},{"location":"index.html#hashtables","text":"Hashing, HashTables, HashSets, and HashMaps","title":"HashTables"},{"location":"index.html#algorithms-preview","text":"Balancing Tree Algorithms Intro to Graphs & Graph Algorithms","title":"Algorithms Preview"},{"location":"Balancing.html","text":"Balancing Tree Algorithms Why we Balance Trees (3:28) Tree Rotations (3:04) AVL Self-Balancing Algorithm Overview (5:11) Red-Black Self-Balancing Algorithm Overview (2:25) SkipLists (2:23)","title":"Balancing Tree Algorithms"},{"location":"Balancing.html#balancing-tree-algorithms","text":"","title":"Balancing Tree Algorithms"},{"location":"Balancing.html#why-we-balance-trees-328","text":"","title":"Why we Balance Trees (3:28)"},{"location":"Balancing.html#tree-rotations-304","text":"","title":"Tree Rotations (3:04)"},{"location":"Balancing.html#avl-self-balancing-algorithm-overview-511","text":"","title":"AVL Self-Balancing Algorithm Overview (5:11)"},{"location":"Balancing.html#red-black-self-balancing-algorithm-overview-225","text":"","title":"Red-Black Self-Balancing Algorithm Overview (2:25)"},{"location":"Balancing.html#skiplists-223","text":"","title":"SkipLists (2:23)"},{"location":"ChunkyArrayList.html","text":"Chunky ArrayLists ChunkyArrayList (what is it?) (3:32) ChunkyArrayList addFront (1:51) ChunkyArrayList removeFront (2:26) ChunkyArrayList addIndex animated (4:46) ChunkyArrayList Complexity Discussion (3:40)","title":"Chunky ArrayLists"},{"location":"ChunkyArrayList.html#chunky-arraylists","text":"","title":"Chunky ArrayLists"},{"location":"ChunkyArrayList.html#chunkyarraylist-what-is-it-332","text":"","title":"ChunkyArrayList (what is it?) (3:32)"},{"location":"ChunkyArrayList.html#chunkyarraylist-addfront-151","text":"","title":"ChunkyArrayList addFront (1:51)"},{"location":"ChunkyArrayList.html#chunkyarraylist-removefront-226","text":"","title":"ChunkyArrayList removeFront (2:26)"},{"location":"ChunkyArrayList.html#chunkyarraylist-addindex-animated-446","text":"","title":"ChunkyArrayList addIndex animated (4:46)"},{"location":"ChunkyArrayList.html#chunkyarraylist-complexity-discussion-340","text":"","title":"ChunkyArrayList Complexity Discussion (3:40)"},{"location":"DLL.html","text":"Doubly Linked-Lists DLL: Intro/Symmetry (3:59) DLL size() vs. SLL size() (1:36) DLL isEmpty() quiz solution (2:41) SLL/DLL Complexity Table (2:45)","title":"Doubly Linked-Lists"},{"location":"DLL.html#doubly-linked-lists","text":"","title":"Doubly Linked-Lists"},{"location":"DLL.html#dll-introsymmetry-359","text":"","title":"DLL: Intro/Symmetry (3:59)"},{"location":"DLL.html#dll-size-vs-sll-size-136","text":"","title":"DLL size() vs. SLL size() (1:36)"},{"location":"DLL.html#dll-isempty-quiz-solution-241","text":"","title":"DLL isEmpty() quiz solution (2:41)"},{"location":"DLL.html#slldll-complexity-table-245","text":"","title":"SLL/DLL Complexity Table (2:45)"},{"location":"FSL.html","text":"Array-Based Lists: FixedSizeList & GrowableList (aka ArrayList) What's an ArrayWrapper? (2:45) slideToTheLeft Code Discussion (3:03) ArrayWrapper to FixedSizeList to ArrayList/GrowableList (1:56) FixedSizeList Class Tour (1:47) FixedSizeList Visual/Mental Model (2:19) FixedSizeList removeIndex(2) Visual Example (1:33) FixedSizeList addBack (1:49) FixedSizeList removeIndex Code (2:25) FixedSizeList to ArrayList Plan & Visual (3:28) ArrayList/GrowableList resizeArray (0:58) ArrayList Conclusions & Core Challanges (2:54)","title":"Array-Based Lists: FixedSizeList & GrowableList (aka ArrayList)"},{"location":"FSL.html#array-based-lists-fixedsizelist-growablelist-aka-arraylist","text":"","title":"Array-Based Lists: FixedSizeList &amp; GrowableList (aka ArrayList)"},{"location":"FSL.html#whats-an-arraywrapper-245","text":"","title":"What's an ArrayWrapper? (2:45)"},{"location":"FSL.html#slidetotheleft-code-discussion-303","text":"","title":"slideToTheLeft Code Discussion (3:03)"},{"location":"FSL.html#arraywrapper-to-fixedsizelist-to-arraylistgrowablelist-156","text":"","title":"ArrayWrapper to FixedSizeList to ArrayList/GrowableList (1:56)"},{"location":"FSL.html#fixedsizelist-class-tour-147","text":"","title":"FixedSizeList Class Tour (1:47)"},{"location":"FSL.html#fixedsizelist-visualmental-model-219","text":"","title":"FixedSizeList Visual/Mental Model (2:19)"},{"location":"FSL.html#fixedsizelist-removeindex2-visual-example-133","text":"","title":"FixedSizeList removeIndex(2) Visual Example (1:33)"},{"location":"FSL.html#fixedsizelist-addback-149","text":"","title":"FixedSizeList addBack (1:49)"},{"location":"FSL.html#fixedsizelist-removeindex-code-225","text":"","title":"FixedSizeList removeIndex Code (2:25)"},{"location":"FSL.html#fixedsizelist-to-arraylist-plan-visual-328","text":"","title":"FixedSizeList to ArrayList Plan &amp; Visual (3:28)"},{"location":"FSL.html#arraylistgrowablelist-resizearray-058","text":"","title":"ArrayList/GrowableList resizeArray (0:58)"},{"location":"FSL.html#arraylist-conclusions-core-challanges-254","text":"","title":"ArrayList Conclusions &amp; Core Challanges (2:54)"},{"location":"Graphs.html","text":"Intro to Graphs & Graph Algorithms Why we study Graphs... (2:38) IsThisWinnable (Recursive) (2:19) IsThisWinnable (Iterative) (2:07) Terminology used in Graph Search (2:13) SpookyMansion: Depth-First-Search (1:36) Depth-First-Search Application: Maze Generation (1:02) Weaknesses of Depth-First-Search (1:38) Breadth-First-Search (2:56) Weight-Based Graph Searching (A*, Shortest-Path-First) (5:18)","title":"Intro to Graphs & Graph Algorithms"},{"location":"Graphs.html#intro-to-graphs-graph-algorithms","text":"","title":"Intro to Graphs &amp; Graph Algorithms"},{"location":"Graphs.html#why-we-study-graphs-238","text":"","title":"Why we study Graphs... (2:38)"},{"location":"Graphs.html#isthiswinnable-recursive-219","text":"","title":"IsThisWinnable (Recursive) (2:19)"},{"location":"Graphs.html#isthiswinnable-iterative-207","text":"","title":"IsThisWinnable (Iterative) (2:07)"},{"location":"Graphs.html#terminology-used-in-graph-search-213","text":"","title":"Terminology used in Graph Search (2:13)"},{"location":"Graphs.html#spookymansion-depth-first-search-136","text":"","title":"SpookyMansion: Depth-First-Search (1:36)"},{"location":"Graphs.html#depth-first-search-application-maze-generation-102","text":"","title":"Depth-First-Search Application: Maze Generation (1:02)"},{"location":"Graphs.html#weaknesses-of-depth-first-search-138","text":"","title":"Weaknesses of Depth-First-Search (1:38)"},{"location":"Graphs.html#breadth-first-search-256","text":"","title":"Breadth-First-Search (2:56)"},{"location":"Graphs.html#weight-based-graph-searching-a-shortest-path-first-518","text":"","title":"Weight-Based Graph Searching (A*, Shortest-Path-First) (5:18)"},{"location":"HashTables.html","text":"Hashing, HashTables, HashSets, and HashMaps What is a hash function? (5:11) Hash Functions in Security/Privacy (2:22) Hash Functions for HashMaps (3:28) HashSet Example (4:30) HashMap Example (1:11) HashMap Internals: Collisions and Load Factor (5:50) HashSet with Fewer Buckets (1:43) HashMap Collision Resolution Strategies (2:21) HashSet with Linear Probing Example (4:56) HashMap Internals: Example Bucket Classes (1:06) Insertion Order: LinkedHashMap and LinkedHashSet (1:15) HashMaps are the best Dictionary (Complexity) (3:25)","title":"Hashing, HashTables, HashSets, and HashMaps"},{"location":"HashTables.html#hashing-hashtables-hashsets-and-hashmaps","text":"","title":"Hashing, HashTables, HashSets, and HashMaps"},{"location":"HashTables.html#what-is-a-hash-function-511","text":"","title":"What is a hash function? (5:11)"},{"location":"HashTables.html#hash-functions-in-securityprivacy-222","text":"","title":"Hash Functions in Security/Privacy (2:22)"},{"location":"HashTables.html#hash-functions-for-hashmaps-328","text":"","title":"Hash Functions for HashMaps (3:28)"},{"location":"HashTables.html#hashset-example-430","text":"","title":"HashSet Example (4:30)"},{"location":"HashTables.html#hashmap-example-111","text":"","title":"HashMap Example (1:11)"},{"location":"HashTables.html#hashmap-internals-collisions-and-load-factor-550","text":"","title":"HashMap Internals: Collisions and Load Factor (5:50)"},{"location":"HashTables.html#hashset-with-fewer-buckets-143","text":"","title":"HashSet with Fewer Buckets (1:43)"},{"location":"HashTables.html#hashmap-collision-resolution-strategies-221","text":"","title":"HashMap Collision Resolution Strategies (2:21)"},{"location":"HashTables.html#hashset-with-linear-probing-example-456","text":"","title":"HashSet with Linear Probing Example (4:56)"},{"location":"HashTables.html#hashmap-internals-example-bucket-classes-106","text":"","title":"HashMap Internals: Example Bucket Classes (1:06)"},{"location":"HashTables.html#insertion-order-linkedhashmap-and-linkedhashset-115","text":"","title":"Insertion Order: LinkedHashMap and LinkedHashSet (1:15)"},{"location":"HashTables.html#hashmaps-are-the-best-dictionary-complexity-325","text":"","title":"HashMaps are the best Dictionary (Complexity) (3:25)"},{"location":"Heaps.html","text":"Heaps & HeapSort Heaps vs. Binary Search Trees (3:36) Min-heaps and Max-heaps (1:40) Heaps are stored in ArrayLists (3:05) Heap Insert (1:59) Heap Sift-Up Code (2:10) Heap Remove (Sift-Down) Ex. 1 (1:18) Heap Remove (SiftDown) Ex. 2 (1:18) Heap Sift-Down Code (3:35) HeapSort (4:30) PriorityQueue Complexity (2:13) Heap Applications: Priority Queue (4:15)","title":"Heaps & HeapSort"},{"location":"Heaps.html#heaps-heapsort","text":"","title":"Heaps &amp; HeapSort"},{"location":"Heaps.html#heaps-vs-binary-search-trees-336","text":"","title":"Heaps vs. Binary Search Trees (3:36)"},{"location":"Heaps.html#min-heaps-and-max-heaps-140","text":"","title":"Min-heaps and Max-heaps (1:40)"},{"location":"Heaps.html#heaps-are-stored-in-arraylists-305","text":"","title":"Heaps are stored in ArrayLists (3:05)"},{"location":"Heaps.html#heap-insert-159","text":"","title":"Heap Insert (1:59)"},{"location":"Heaps.html#heap-sift-up-code-210","text":"","title":"Heap Sift-Up Code (2:10)"},{"location":"Heaps.html#heap-remove-sift-down-ex-1-118","text":"","title":"Heap Remove (Sift-Down) Ex. 1 (1:18)"},{"location":"Heaps.html#heap-remove-siftdown-ex-2-118","text":"","title":"Heap Remove (SiftDown) Ex. 2 (1:18)"},{"location":"Heaps.html#heap-sift-down-code-335","text":"","title":"Heap Sift-Down Code (3:35)"},{"location":"Heaps.html#heapsort-430","text":"","title":"HeapSort (4:30)"},{"location":"Heaps.html#priorityqueue-complexity-213","text":"","title":"PriorityQueue Complexity (2:13)"},{"location":"Heaps.html#heap-applications-priority-queue-415","text":"","title":"Heap Applications: Priority Queue (4:15)"},{"location":"Lists.html","text":"Lists Conclusions How are loops abstract? Iterators. (8:19) Dealing with Infinite Loops in JUnit and Linked Lists. (5:30) Lists IRL: Where are these data structures found? (4:25)","title":"Lists Conclusions"},{"location":"Lists.html#lists-conclusions","text":"","title":"Lists Conclusions"},{"location":"Lists.html#how-are-loops-abstract-iterators-819","text":"","title":"How are loops abstract? Iterators. (8:19)"},{"location":"Lists.html#dealing-with-infinite-loops-in-junit-and-linked-lists-530","text":"","title":"Dealing with Infinite Loops in JUnit and Linked Lists. (5:30)"},{"location":"Lists.html#lists-irl-where-are-these-data-structures-found-425","text":"","title":"Lists IRL: Where are these data structures found? (4:25)"},{"location":"QuickSort.html","text":"QuickSort Quick Idea of Quicksort (2:24) Quicksort: Hoare's Partitioning (4:53) Quicksort: Small Example (1:21) QuickSort: Efficiency / Choosing a Pivot (3:45) QuickSort Complexity & IRL (3:13)","title":"QuickSort"},{"location":"QuickSort.html#quicksort","text":"","title":"QuickSort"},{"location":"QuickSort.html#quick-idea-of-quicksort-224","text":"","title":"Quick Idea of Quicksort (2:24)"},{"location":"QuickSort.html#quicksort-hoares-partitioning-453","text":"","title":"Quicksort: Hoare's Partitioning (4:53)"},{"location":"QuickSort.html#quicksort-small-example-121","text":"","title":"Quicksort: Small Example (1:21)"},{"location":"QuickSort.html#quicksort-efficiency-choosing-a-pivot-345","text":"","title":"QuickSort: Efficiency / Choosing a Pivot (3:45)"},{"location":"QuickSort.html#quicksort-complexity-irl-313","text":"","title":"QuickSort Complexity &amp; IRL (3:13)"},{"location":"SLL.html","text":"Singly Linked-Lists SLL: Recursion Quick Review (3:56) SLL: Structural Recursion (6:16) SLL: Overview (2:54) SLL: size() with nodes (4:39) SLL: addFront (5:55) SLL: removeFront (3:35) SLL: addBack (6:31) SLL: getIndex (strategy only) (2:23) SLL: removeBack (strategy only) (3:32) SLL: Loops Quiz Solution (3:31)","title":"Singly Linked-Lists"},{"location":"SLL.html#singly-linked-lists","text":"","title":"Singly Linked-Lists"},{"location":"SLL.html#sll-recursion-quick-review-356","text":"","title":"SLL: Recursion Quick Review (3:56)"},{"location":"SLL.html#sll-structural-recursion-616","text":"","title":"SLL: Structural Recursion (6:16)"},{"location":"SLL.html#sll-overview-254","text":"","title":"SLL: Overview (2:54)"},{"location":"SLL.html#sll-size-with-nodes-439","text":"","title":"SLL: size() with nodes (4:39)"},{"location":"SLL.html#sll-addfront-555","text":"","title":"SLL: addFront (5:55)"},{"location":"SLL.html#sll-removefront-335","text":"","title":"SLL: removeFront (3:35)"},{"location":"SLL.html#sll-addback-631","text":"","title":"SLL: addBack (6:31)"},{"location":"SLL.html#sll-getindex-strategy-only-223","text":"","title":"SLL: getIndex (strategy only) (2:23)"},{"location":"SLL.html#sll-removeback-strategy-only-332","text":"","title":"SLL: removeBack (strategy only) (3:32)"},{"location":"SLL.html#sll-loops-quiz-solution-331","text":"","title":"SLL: Loops Quiz Solution (3:31)"},{"location":"Sorting1.html","text":"Sorting (Part 1): Binary Search, IsSorted, BubbleSort What is Divide & Conquer? (4:31) Binary Search: The Power (and Why?) of Sorting (3:47) What is a logarithm? Why does it show up in CS? (2:14) IsSorted (intuition / pre-quiz hint) (1:09) From IsSorted to BubbleSort (6:52)","title":"Sorting (Part 1): Binary Search, IsSorted, BubbleSort"},{"location":"Sorting1.html#sorting-part-1-binary-search-issorted-bubblesort","text":"","title":"Sorting (Part 1): Binary Search, IsSorted, BubbleSort"},{"location":"Sorting1.html#what-is-divide-conquer-431","text":"","title":"What is Divide &amp; Conquer? (4:31)"},{"location":"Sorting1.html#binary-search-the-power-and-why-of-sorting-347","text":"","title":"Binary Search: The Power (and Why?) of Sorting (3:47)"},{"location":"Sorting1.html#what-is-a-logarithm-why-does-it-show-up-in-cs-214","text":"","title":"What is a logarithm? Why does it show up in CS? (2:14)"},{"location":"Sorting1.html#issorted-intuition-pre-quiz-hint-109","text":"","title":"IsSorted (intuition / pre-quiz hint) (1:09)"},{"location":"Sorting1.html#from-issorted-to-bubblesort-652","text":"","title":"From IsSorted to BubbleSort (6:52)"},{"location":"Sorting2.html","text":"Sorting (Part 2): Insertion, Selection and Merge Sort Insertion Sort (5:29) Selection Sort (4:44) MergeSort combineTwoSortedLists (Ex. 1) (3:24) MergeSort combineTwoSortedLists (pseudocode) (1:32) MergeSort intuition (from combineTwoSortedLists) (1:36) MergeSort: Iterative (3:30) MergeSort: Recursive (3:16) MergeSort: Small Example (5:04) MergeSort: Big Example & Complexity (9:08)","title":"Sorting (Part 2): Insertion, Selection and Merge Sort"},{"location":"Sorting2.html#sorting-part-2-insertion-selection-and-merge-sort","text":"","title":"Sorting (Part 2): Insertion, Selection and Merge Sort"},{"location":"Sorting2.html#insertion-sort-529","text":"","title":"Insertion Sort (5:29)"},{"location":"Sorting2.html#selection-sort-444","text":"","title":"Selection Sort (4:44)"},{"location":"Sorting2.html#mergesort-combinetwosortedlists-ex-1-324","text":"","title":"MergeSort combineTwoSortedLists (Ex. 1) (3:24)"},{"location":"Sorting2.html#mergesort-combinetwosortedlists-pseudocode-132","text":"","title":"MergeSort combineTwoSortedLists (pseudocode) (1:32)"},{"location":"Sorting2.html#mergesort-intuition-from-combinetwosortedlists-136","text":"","title":"MergeSort intuition (from combineTwoSortedLists) (1:36)"},{"location":"Sorting2.html#mergesort-iterative-330","text":"","title":"MergeSort: Iterative (3:30)"},{"location":"Sorting2.html#mergesort-recursive-316","text":"","title":"MergeSort: Recursive (3:16)"},{"location":"Sorting2.html#mergesort-small-example-504","text":"","title":"MergeSort: Small Example (5:04)"},{"location":"Sorting2.html#mergesort-big-example-complexity-908","text":"","title":"MergeSort: Big Example &amp; Complexity (9:08)"},{"location":"Trees.html","text":"Intro to Trees What is a Tree? (5:25) Tree Terminology (2:14) Tree Node Definition (1:41) Tree Node Definition Drawing (1:05) Trees to TreeSet and TreeMap (4:48) Complexity in TreeSet and TreeMap (5:17) Balancing and Tree Operation Complexity (4:15) What is a Binary Tree? (+BTree) (6:41) Tree Traverals and Math Expression Example (6:45) Code for In-Order Tree Traversal (3:41) Code for Tree Traversals (all at once) (4:43) Applications of Trees (4:58) Trees Recap (1:26)","title":"Intro to Trees"},{"location":"Trees.html#intro-to-trees","text":"","title":"Intro to Trees"},{"location":"Trees.html#what-is-a-tree-525","text":"","title":"What is a Tree? (5:25)"},{"location":"Trees.html#tree-terminology-214","text":"","title":"Tree Terminology (2:14)"},{"location":"Trees.html#tree-node-definition-141","text":"","title":"Tree Node Definition (1:41)"},{"location":"Trees.html#tree-node-definition-drawing-105","text":"","title":"Tree Node Definition Drawing (1:05)"},{"location":"Trees.html#trees-to-treeset-and-treemap-448","text":"","title":"Trees to TreeSet and TreeMap (4:48)"},{"location":"Trees.html#complexity-in-treeset-and-treemap-517","text":"","title":"Complexity in TreeSet and TreeMap (5:17)"},{"location":"Trees.html#balancing-and-tree-operation-complexity-415","text":"","title":"Balancing and Tree Operation Complexity (4:15)"},{"location":"Trees.html#what-is-a-binary-tree-btree-641","text":"","title":"What is a Binary Tree? (+BTree) (6:41)"},{"location":"Trees.html#tree-traverals-and-math-expression-example-645","text":"","title":"Tree Traverals and Math Expression Example (6:45)"},{"location":"Trees.html#code-for-in-order-tree-traversal-341","text":"","title":"Code for In-Order Tree Traversal (3:41)"},{"location":"Trees.html#code-for-tree-traversals-all-at-once-443","text":"","title":"Code for Tree Traversals (all at once) (4:43)"},{"location":"Trees.html#applications-of-trees-458","text":"","title":"Applications of Trees (4:58)"},{"location":"Trees.html#trees-recap-126","text":"","title":"Trees Recap (1:26)"}]}